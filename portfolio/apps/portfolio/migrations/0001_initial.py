# Generated by Django 5.2.6 on 2025-09-30 05:16

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="ProjectCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=100, verbose_name="Category Name"),
                ),
                (
                    "slug",
                    models.SlugField(blank=True, unique=True, verbose_name="Slug"),
                ),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="Description"),
                ),
                (
                    "icon_class",
                    models.CharField(
                        blank=True,
                        help_text="Bootstrap Icon class (e.g., 'bi-laptop')",
                        max_length=50,
                        verbose_name="Icon Class",
                    ),
                ),
                (
                    "order",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Display Order"
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Active")),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
            ],
            options={
                "verbose_name": "Project Category",
                "verbose_name_plural": "Project Categories",
                "db_table": "portfolio_category",
                "ordering": ["order", "name"],
            },
        ),
        migrations.CreateModel(
            name="Technology",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=50, verbose_name="Technology Name"),
                ),
                (
                    "slug",
                    models.SlugField(blank=True, unique=True, verbose_name="Slug"),
                ),
                (
                    "icon",
                    models.CharField(
                        blank=True,
                        help_text="Icon class or image path",
                        max_length=100,
                        verbose_name="Icon",
                    ),
                ),
                (
                    "color",
                    models.CharField(
                        default="#007bff",
                        help_text="Hex color code (e.g., #007bff)",
                        max_length=7,
                        verbose_name="Badge Color",
                    ),
                ),
                (
                    "order",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Display Order"
                    ),
                ),
            ],
            options={
                "verbose_name": "Technology",
                "verbose_name_plural": "Technologies",
                "db_table": "portfolio_technology",
                "ordering": ["order", "name"],
            },
        ),
        migrations.CreateModel(
            name="Project",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "title",
                    models.CharField(max_length=200, verbose_name="Project Title"),
                ),
                (
                    "slug",
                    models.SlugField(blank=True, unique=True, verbose_name="Slug"),
                ),
                (
                    "tagline",
                    models.CharField(
                        blank=True,
                        help_text="Short catchy description (one line)",
                        max_length=250,
                        verbose_name="Tagline",
                    ),
                ),
                (
                    "short_description",
                    models.TextField(
                        help_text="Brief description for cards (2-3 lines)",
                        max_length=500,
                        verbose_name="Short Description",
                    ),
                ),
                ("full_description", models.TextField(verbose_name="Full Description")),
                (
                    "thumbnail",
                    models.ImageField(
                        help_text="Main project image (recommended: 800x600)",
                        upload_to="portfolio/thumbnails/",
                        verbose_name="Thumbnail",
                    ),
                ),
                (
                    "banner_image",
                    models.ImageField(
                        blank=True,
                        help_text="Large banner for detail page (recommended: 1920x600)",
                        null=True,
                        upload_to="portfolio/banners/",
                        verbose_name="Banner Image",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("completed", "Completed"),
                            ("in_progress", "In Progress"),
                            ("demo", "Demo/Showcase"),
                        ],
                        default="completed",
                        max_length=20,
                        verbose_name="Project Status",
                    ),
                ),
                (
                    "client",
                    models.CharField(
                        blank=True, max_length=200, verbose_name="Client Name"
                    ),
                ),
                (
                    "completion_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Completion Date"
                    ),
                ),
                (
                    "duration",
                    models.CharField(
                        blank=True,
                        help_text="e.g., '3 months', '6 weeks'",
                        max_length=100,
                        verbose_name="Project Duration",
                    ),
                ),
                (
                    "key_features",
                    models.TextField(
                        blank=True,
                        help_text="One feature per line",
                        verbose_name="Key Features",
                    ),
                ),
                (
                    "challenges_solutions",
                    models.TextField(
                        blank=True,
                        help_text="Describe challenges faced and solutions implemented",
                        verbose_name="Challenges & Solutions",
                    ),
                ),
                (
                    "has_live_demo",
                    models.BooleanField(
                        default=False,
                        help_text="Does this project have a live demo in this portfolio?",
                        verbose_name="Has Live Demo",
                    ),
                ),
                (
                    "demo_app_name",
                    models.CharField(
                        blank=True,
                        help_text="Django app name for demo (e.g., 'salon_booking')",
                        max_length=100,
                        verbose_name="Demo App Name",
                    ),
                ),
                (
                    "demo_url_prefix",
                    models.CharField(
                        blank=True,
                        help_text="URL prefix for demo (e.g., 'salon-demo')",
                        max_length=100,
                        verbose_name="Demo URL Prefix",
                    ),
                ),
                ("github_url", models.URLField(blank=True, verbose_name="GitHub URL")),
                (
                    "live_url",
                    models.URLField(blank=True, verbose_name="Live Project URL"),
                ),
                (
                    "view_count",
                    models.PositiveIntegerField(default=0, verbose_name="View Count"),
                ),
                (
                    "is_featured",
                    models.BooleanField(default=False, verbose_name="Featured Project"),
                ),
                (
                    "order",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Display Order"
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Active")),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated At"),
                ),
                (
                    "category",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="projects",
                        to="portfolio.projectcategory",
                        verbose_name="Category",
                    ),
                ),
                (
                    "technologies",
                    models.ManyToManyField(
                        related_name="projects",
                        to="portfolio.technology",
                        verbose_name="Technologies Used",
                    ),
                ),
            ],
            options={
                "verbose_name": "Project",
                "verbose_name_plural": "Projects",
                "db_table": "portfolio_project",
                "ordering": ["-is_featured", "order", "-created_at"],
            },
        ),
        migrations.CreateModel(
            name="ProjectImage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "image",
                    models.ImageField(
                        upload_to="portfolio/gallery/", verbose_name="Image"
                    ),
                ),
                (
                    "caption",
                    models.CharField(
                        blank=True, max_length=200, verbose_name="Caption"
                    ),
                ),
                (
                    "order",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Display Order"
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Active")),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="gallery_images",
                        to="portfolio.project",
                        verbose_name="Project",
                    ),
                ),
            ],
            options={
                "verbose_name": "Project Image",
                "verbose_name_plural": "Project Images",
                "db_table": "portfolio_project_image",
                "ordering": ["order"],
            },
        ),
        migrations.CreateModel(
            name="ProjectTestimonial",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "client_name",
                    models.CharField(max_length=100, verbose_name="Client Name"),
                ),
                (
                    "client_position",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Client Position"
                    ),
                ),
                (
                    "client_company",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Client Company"
                    ),
                ),
                (
                    "client_photo",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="portfolio/testimonials/",
                        verbose_name="Client Photo",
                    ),
                ),
                ("testimonial", models.TextField(verbose_name="Testimonial Text")),
                (
                    "rating",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (1, "1 Stars"),
                            (2, "2 Stars"),
                            (3, "3 Stars"),
                            (4, "4 Stars"),
                            (5, "5 Stars"),
                        ],
                        default=5,
                        verbose_name="Rating",
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Active")),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="testimonials",
                        to="portfolio.project",
                        verbose_name="Project",
                    ),
                ),
            ],
            options={
                "verbose_name": "Project Testimonial",
                "verbose_name_plural": "Project Testimonials",
                "db_table": "portfolio_testimonial",
                "ordering": ["-created_at"],
            },
        ),
    ]
